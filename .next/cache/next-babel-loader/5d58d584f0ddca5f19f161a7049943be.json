{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Form, Input, Message, Button } from \"semantic-ui-react\";\nimport Campaign from \"../ethereum/campaign\";\nimport web3 from \"../ethereum/web3\";\nimport { Router } from \"../routes\";\n\nconst ContributeForm = props => {\n  const {\n    0: input,\n    1: setInput\n  } = useState(\"\");\n  const {\n    0: errMsg,\n    1: setErrMsg\n  } = useState(\"\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const onSubmitHandler = async event => {\n    event.preventDefault();\n    const campaign = Campaign(props.address);\n    setLoading(true);\n    setErrMsg(\"\");\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.contribution().send({\n        from: accounts[0],\n        value: web3.utils.toWei(input, \"ether\")\n      });\n      Router.replaceRoute(`/campaigns/${props.address}`);\n    } catch (err) {\n      setErrMsg(err.message);\n    }\n\n    setLoading(false);\n  };\n\n  return __jsx(Form, {\n    error: !!errMsg,\n    onSubmit: onSubmitHandler\n  }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount to Contribute\"), __jsx(Input, {\n    label: \"ether\",\n    labelPosition: \"right\",\n    value: input,\n    onChange: event => setInput(event.target.value)\n  })), __jsx(Message, {\n    error: true,\n    header: \"Oops!\",\n    content: errMsg\n  }), __jsx(Button, {\n    loading: loading,\n    primary: true,\n    type: \"submit\"\n  }, \"Contribute!\"));\n};\n\nexport default ContributeForm;","map":{"version":3,"sources":["/home/beast/Desktop/myGithub/kickstarter-ethereum/components/ContributeForm.js"],"names":["React","useState","Form","Input","Message","Button","Campaign","web3","Router","ContributeForm","props","input","setInput","errMsg","setErrMsg","loading","setLoading","onSubmitHandler","event","preventDefault","campaign","address","accounts","eth","getAccounts","methods","contribution","send","from","value","utils","toWei","replaceRoute","err","message","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,MAA/B,QAA6C,mBAA7C;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAC9B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACY,MAAD;AAAA,OAASC;AAAT,MAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACc,OAAD;AAAA,OAAUC;AAAV,MAAwBf,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMgB,eAAe,GAAG,MAAMC,KAAN,IAAe;AACrCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,QAAQ,GAAGd,QAAQ,CAACI,KAAK,CAACW,OAAP,CAAzB;AACAL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,IAAAA,SAAS,CAAC,EAAD,CAAT;;AACA,QAAI;AACF,YAAMQ,QAAQ,GAAG,MAAMf,IAAI,CAACgB,GAAL,CAASC,WAAT,EAAvB;AACA,YAAMJ,QAAQ,CAACK,OAAT,CAAiBC,YAAjB,GAAgCC,IAAhC,CAAqC;AACzCC,QAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD,CAD2B;AAEzCO,QAAAA,KAAK,EAAEtB,IAAI,CAACuB,KAAL,CAAWC,KAAX,CAAiBpB,KAAjB,EAAwB,OAAxB;AAFkC,OAArC,CAAN;AAIAH,MAAAA,MAAM,CAACwB,YAAP,CAAqB,cAAatB,KAAK,CAACW,OAAQ,EAAhD;AACD,KAPD,CAOE,OAAOY,GAAP,EAAY;AACZnB,MAAAA,SAAS,CAACmB,GAAG,CAACC,OAAL,CAAT;AACD;;AACDlB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAhBD;;AAkBA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAC,CAACH,MAAf;AAAuB,IAAA,QAAQ,EAAEI;AAAjC,KACE,MAAC,IAAD,CAAM,KAAN,QACE,4CADF,EAEE,MAAC,KAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,aAAa,EAAC,OAFhB;AAGE,IAAA,KAAK,EAAEN,KAHT;AAIE,IAAA,QAAQ,EAAEO,KAAK,IAAIN,QAAQ,CAACM,KAAK,CAACiB,MAAN,CAAaN,KAAd;AAJ7B,IAFF,CADF,EAUE,MAAC,OAAD;AAAS,IAAA,KAAK,MAAd;AAAe,IAAA,MAAM,EAAC,OAAtB;AAA8B,IAAA,OAAO,EAAEhB;AAAvC,IAVF,EAWE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEE,OAAjB;AAA0B,IAAA,OAAO,MAAjC;AAAkC,IAAA,IAAI,EAAC;AAAvC,mBAXF,CADF;AAiBD,CAxCD;;AA0CA,eAAeN,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Input, Message, Button } from \"semantic-ui-react\";\nimport Campaign from \"../ethereum/campaign\";\nimport web3 from \"../ethereum/web3\";\nimport { Router } from \"../routes\";\n\nconst ContributeForm = props => {\n  const [input, setInput] = useState(\"\");\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const onSubmitHandler = async event => {\n    event.preventDefault();\n    const campaign = Campaign(props.address);\n    setLoading(true);\n    setErrMsg(\"\");\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.contribution().send({\n        from: accounts[0],\n        value: web3.utils.toWei(input, \"ether\")\n      });\n      Router.replaceRoute(`/campaigns/${props.address}`);\n    } catch (err) {\n      setErrMsg(err.message);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <Form error={!!errMsg} onSubmit={onSubmitHandler}>\n      <Form.Field>\n        <label>Amount to Contribute</label>\n        <Input\n          label=\"ether\"\n          labelPosition=\"right\"\n          value={input}\n          onChange={event => setInput(event.target.value)}\n        />\n      </Form.Field>\n      <Message error header=\"Oops!\" content={errMsg} />\n      <Button loading={loading} primary type=\"submit\">\n        Contribute!\n      </Button>\n    </Form>\n  );\n};\n\nexport default ContributeForm;\n"]},"metadata":{},"sourceType":"module"}