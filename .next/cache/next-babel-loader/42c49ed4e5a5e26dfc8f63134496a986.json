{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport { Card } from 'semantic-ui-react';\n\nvar CampaignShow = function CampaignShow(props) {\n  var renderCards = function renderCards() {\n    var minimunContribution = props.minimunContribution,\n        balance = props.balance,\n        requestCount = props.requestCount,\n        approversCount = props.approversCount,\n        manager = props.manager;\n    var items = [{\n      header: manager,\n      meta: 'Address of Manager',\n      description: 'The manager created this campaign and can only create requests'\n    }];\n    return __jsx(Card.Group, {\n      items: items\n    });\n  };\n\n  return __jsx(Layout, null, __jsx(\"h3\", null, \"Campaign Show\"), renderCards());\n};\n\nCampaignShow.getInitialProps = function _callee(props) {\n  var address, campaign, summary;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          address = props.query.address;\n          campaign = Campaign(address);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(campaign.methods.getSummary().call());\n\n        case 4:\n          summary = _context.sent;\n          return _context.abrupt(\"return\", {\n            minimunContribution: summary[0],\n            balance: summary[1],\n            requestCount: summary[2],\n            approversCount: summary[3],\n            manager: summary[4]\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default CampaignShow;","map":{"version":3,"sources":["/home/beast/Desktop/myGithub/kickstarter-ethereum/pages/campaigns/show.js"],"names":["React","Layout","Campaign","Card","CampaignShow","props","renderCards","minimunContribution","balance","requestCount","approversCount","manager","items","header","meta","description","getInitialProps","address","query","campaign","methods","getSummary","call","summary"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAE5B,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAI;AAAA,QAEhBC,mBAFgB,GAOhBF,KAPgB,CAEhBE,mBAFgB;AAAA,QAGhBC,OAHgB,GAOhBH,KAPgB,CAGhBG,OAHgB;AAAA,QAIhBC,YAJgB,GAOhBJ,KAPgB,CAIhBI,YAJgB;AAAA,QAKhBC,cALgB,GAOhBL,KAPgB,CAKhBK,cALgB;AAAA,QAMhBC,OANgB,GAOhBN,KAPgB,CAMhBM,OANgB;AASpB,QAAMC,KAAK,GAAE,CACT;AACIC,MAAAA,MAAM,EAAEF,OADZ;AAEIG,MAAAA,IAAI,EAAE,oBAFV;AAGIC,MAAAA,WAAW,EAAE;AAHjB,KADS,CAAb;AAQA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEH;AAAnB,MAAP;AACH,GAlBD;;AAoBA,SACI,MAAC,MAAD,QACI,kCADJ,EAEKN,WAAW,EAFhB,CADJ;AAMH,CA5BD;;AA8BAF,YAAY,CAACY,eAAb,GAA+B,iBAAMX,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBY,UAAAA,OADqB,GACXZ,KAAK,CAACa,KAAN,CAAYD,OADD;AAErBE,UAAAA,QAFqB,GAEVjB,QAAQ,CAACe,OAAD,CAFE;AAAA;AAAA,2CAGLE,QAAQ,CAACC,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAHK;;AAAA;AAGrBC,UAAAA,OAHqB;AAAA,2CAKpB;AACHhB,YAAAA,mBAAmB,EAAEgB,OAAO,CAAC,CAAD,CADzB;AAEHf,YAAAA,OAAO,EAAEe,OAAO,CAAC,CAAD,CAFb;AAGHd,YAAAA,YAAY,EAAEc,OAAO,CAAC,CAAD,CAHlB;AAIHb,YAAAA,cAAc,EAAEa,OAAO,CAAC,CAAD,CAJpB;AAKHZ,YAAAA,OAAO,EAAEY,OAAO,CAAC,CAAD;AALb,WALoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/B;;AAcA,eAAenB,YAAf","sourcesContent":["import React from 'react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport { Card } from 'semantic-ui-react';\n\nconst CampaignShow = (props) => {\n\n    const renderCards = ()=>{\n        const {\n            minimunContribution,\n            balance,\n            requestCount,\n            approversCount,\n            manager\n        } = props;\n\n        const items =[\n            {\n                header: manager,\n                meta: 'Address of Manager',\n                description: 'The manager created this campaign and can only create requests'\n            }\n        ]\n\n        return <Card.Group items={items} />\n    }\n\n    return(\n        <Layout>\n            <h3>Campaign Show</h3>\n            {renderCards()}\n        </Layout>\n    )\n}\n\nCampaignShow.getInitialProps = async(props)=>{\n    const address = props.query.address;\n    const campaign = Campaign(address);\n    const summary = await campaign.methods.getSummary().call();\n    \n    return {\n        minimunContribution: summary[0],\n        balance: summary[1],\n        requestCount: summary[2],\n        approversCount: summary[3],\n        manager: summary[4]\n    }\n}\n\nexport default CampaignShow;"]},"metadata":{},"sourceType":"module"}