{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Table, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport Campaign from \"../ethereum/campaign\";\n\nconst RequestRow = props => {\n  const {\n    0: approveLoading,\n    1: setApproveLoading\n  } = useState(false);\n  const {\n    0: finalizeLoading,\n    1: setFinalizeLoading\n  } = useState(false);\n  const {\n    0: approveErrMsg,\n    1: setApproveErrMsg\n  } = useState(\"\");\n  const {\n    0: finalizeErrMsg,\n    1: setFinalizeErrMsg\n  } = useState(\"\");\n  const {\n    Row,\n    Cell\n  } = Table;\n  const {\n    id,\n    request,\n    approversCount\n  } = props;\n  const readyToFinalize = request.approvalCount > approversCount / 2;\n\n  const onApproveHandler = async () => {\n    const campaign = Campaign(props.address);\n    setApproveLoading(true);\n    setApproveErrMsg(\"\");\n\n    try {\n      const accounts = web3.eth.getAccounts();\n      await campaign.methods.approveRequest(props.id).send({\n        from: accounts[0]\n      });\n    } catch (err) {\n      setApproveErrMsg(err.message);\n    }\n\n    setApproveLoading(false);\n  };\n\n  const onFinalizeHandler = async () => {\n    const campaign = Campaign(props.address);\n    setFinalizeLoading(true);\n    setFinalizeErrMsg(\"\");\n\n    try {\n      const accounts = web3.eth.getAccounts();\n      await campaign.methods.finalizeRequest(props.id).send({\n        from: accounts[0]\n      });\n    } catch (err) {\n      setFinalizeErrMsg(err.message);\n    }\n\n    setFinalizeLoading(false);\n  };\n\n  return __jsx(Row, {\n    disabled: request.complete,\n    positive: readyToFinalize && !request.complete\n  }, __jsx(Cell, null, id), __jsx(Cell, null, request.description), __jsx(Cell, null, web3.utils.fromWei(request.value, \"ether\")), __jsx(Cell, null, request.recipient), __jsx(Cell, null, `${request.approvalCount}/${approversCount}`), __jsx(Cell, null, request.complete ? null : __jsx(React.Fragment, null, __jsx(Button, {\n    loading: approveLoading,\n    basic: true,\n    color: \"green\",\n    onClick: onApproveHandler\n  }, \"Approve\"), __jsx(\"p\", null, approveErrMsg))), __jsx(Cell, null, request.complete ? null : __jsx(React.Fragment, null, __jsx(Button, {\n    loading: finalizeLoading,\n    basic: true,\n    color: \"teal\",\n    onClick: onFinalizeHandler\n  }, \"Finalize\"), __jsx(\"p\", null, finalizeErrMsg))));\n};\n\nexport default RequestRow;","map":{"version":3,"sources":["/home/beast/Desktop/myGithub/kickstarter-ethereum/components/RequestRow.js"],"names":["React","useState","Table","Button","web3","Campaign","RequestRow","props","approveLoading","setApproveLoading","finalizeLoading","setFinalizeLoading","approveErrMsg","setApproveErrMsg","finalizeErrMsg","setFinalizeErrMsg","Row","Cell","id","request","approversCount","readyToFinalize","approvalCount","onApproveHandler","campaign","address","accounts","eth","getAccounts","methods","approveRequest","send","from","err","message","onFinalizeHandler","finalizeRequest","complete","description","utils","fromWei","value","recipient"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Table, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport Campaign from \"../ethereum/campaign\";\n\nconst RequestRow = props => {\n  const [approveLoading, setApproveLoading] = useState(false);\n  const [finalizeLoading, setFinalizeLoading] = useState(false);\n  const [approveErrMsg, setApproveErrMsg] = useState(\"\");\n  const [finalizeErrMsg, setFinalizeErrMsg] = useState(\"\");\n  const { Row, Cell } = Table;\n  const { id, request, approversCount } = props;\n  const readyToFinalize = request.approvalCount > approversCount / 2;\n\n  const onApproveHandler = async () => {\n    const campaign = Campaign(props.address);\n    setApproveLoading(true);\n    setApproveErrMsg(\"\");\n    try {\n      const accounts = web3.eth.getAccounts();\n      await campaign.methods.approveRequest(props.id).send({\n        from: accounts[0]\n      });\n    } catch (err) {\n      setApproveErrMsg(err.message);\n    }\n    setApproveLoading(false);\n  };\n\n  const onFinalizeHandler = async () => {\n    const campaign = Campaign(props.address);\n    setFinalizeLoading(true);\n    setFinalizeErrMsg(\"\");\n    try {\n      const accounts = web3.eth.getAccounts();\n      await campaign.methods.finalizeRequest(props.id).send({\n        from: accounts[0]\n      });\n    } catch (err) {\n      setFinalizeErrMsg(err.message);\n    }\n    setFinalizeLoading(false);\n  };\n\n  return (\n    <Row\n      disabled={request.complete}\n      positive={readyToFinalize && !request.complete}\n    >\n      <Cell>{id}</Cell>\n      <Cell>{request.description}</Cell>\n      <Cell>{web3.utils.fromWei(request.value, \"ether\")}</Cell>\n      <Cell>{request.recipient}</Cell>\n      <Cell>{`${request.approvalCount}/${approversCount}`}</Cell>\n      <Cell>\n        {request.complete ? null : (\n          <>\n            <Button\n              loading={approveLoading}\n              basic\n              color=\"green\"\n              onClick={onApproveHandler}\n            >\n              Approve\n            </Button>\n            <p>{approveErrMsg}</p>\n          </>\n        )}\n      </Cell>\n      <Cell>\n        {request.complete ? null : (\n          <>\n            <Button\n              loading={finalizeLoading}\n              basic\n              color=\"teal\"\n              onClick={onFinalizeHandler}\n            >\n              Finalize\n            </Button>\n            <p>{finalizeErrMsg}</p>\n          </>\n        )}\n      </Cell>\n    </Row>\n  );\n};\n\nexport default RequestRow;\n"]},"metadata":{},"sourceType":"module"}