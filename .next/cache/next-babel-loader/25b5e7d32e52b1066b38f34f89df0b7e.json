{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/beast/Desktop/myGithub/kickstarter-ethereum/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Card, Button } from 'semantic-ui-react';\nimport factory from '../ethereum/factory';\n\nvar campaignIndex = function campaignIndex(props) {\n  var campaigns = props.campaigns; // const [campaigns, setCampaigns] = useState(campaigns);\n  // useEffect(()=>{\n  //     const x =async()=>{\n  //     }\n  //     x();\n  // }, []);\n\n  var renderCampaigns = function renderCampaigns() {\n    var items = campaigns.map(function (address) {\n      return {\n        header: address,\n        description: __jsx(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, \"View Campaign\"),\n        fluid: true\n      };\n    });\n    return __jsx(Card.Group, {\n      items: items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), renderCampaigns(), __jsx(Button, {\n    content: \"Create Campaign\",\n    icon: \"add circle\",\n    primary: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n};\n\ncampaignIndex.getInitialProps = function _callee() {\n  var campaigns;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(factory.methods.getDeployedCampaigns().call());\n\n        case 2:\n          campaigns = _context.sent;\n          return _context.abrupt(\"return\", {\n            campaigns: campaigns\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default campaignIndex;","map":{"version":3,"sources":["/home/beast/Desktop/myGithub/kickstarter-ethereum/pages/index.js"],"names":["React","useState","useEffect","Card","Button","factory","campaignIndex","props","campaigns","renderCampaigns","items","map","address","header","description","fluid","getInitialProps","methods","getDeployedCampaigns","call"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA,MACtBC,SADsB,GACTD,KADS,CACtBC,SADsB,EAE7B;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,eAAe,GAAE,SAAjBA,eAAiB,GAAI;AACvB,QAAMC,KAAK,GAAGF,SAAS,CAACG,GAAV,CAAc,UAAAC,OAAO,EAAE;AACjC,aAAM;AACFC,QAAAA,MAAM,EAAED,OADN;AAEFE,QAAAA,WAAW,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFX;AAGFC,QAAAA,KAAK,EAAE;AAHL,OAAN;AAKH,KANa,CAAd;AAOA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEL,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GATD;;AAWA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,gEAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKD,eAAe,EAFpB,EAGI,MAAC,MAAD;AACA,IAAA,OAAO,EAAC,iBADR;AAEA,IAAA,IAAI,EAAC,YAFL;AAGA,IAAA,OAAO,MAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAWH,CA/BD;;AAiCAH,aAAa,CAACU,eAAd,GAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJX,OAAO,CAACY,OAAR,CAAgBC,oBAAhB,GAAuCC,IAAvC,EADI;;AAAA;AACtBX,UAAAA,SADsB;AAAA,2CAErB;AAACA,YAAAA,SAAS,EAATA;AAAD,WAFqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC;;AAKA,eAAeF,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Button } from 'semantic-ui-react';\nimport factory from '../ethereum/factory';\n\nconst campaignIndex = (props) => {\n    const {campaigns} = props;\n    // const [campaigns, setCampaigns] = useState(campaigns);\n    // useEffect(()=>{\n    //     const x =async()=>{\n    //     }\n    //     x();\n    // }, []);\n\n    const renderCampaigns =()=>{\n        const items = campaigns.map(address=>{\n            return{\n                header: address,\n                description: <a>View Campaign</a>,\n                fluid: true\n            }\n        })\n        return <Card.Group items={items} />\n    }\n\n    return(\n        <div>\n            <link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\" />\n            {renderCampaigns()}\n            <Button\n            content=\"Create Campaign\"\n            icon=\"add circle\"\n            primary\n            />\n            </div>\n    )\n}\n\ncampaignIndex.getInitialProps = async()=>{\n    const campaigns = await factory.methods.getDeployedCampaigns().call();\n    return {campaigns}\n}\n\nexport default campaignIndex;"]},"metadata":{},"sourceType":"module"}