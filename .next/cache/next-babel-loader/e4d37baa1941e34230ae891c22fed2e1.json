{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/beast/Desktop/myGithub/kickstarter-ethereum/pages/campaigns/new.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3';\n\nvar CampaignNew = function CampaignNew(props) {\n  var _useState = useState(''),\n      miniContribution = _useState[0],\n      setMiniContribution = _useState[1];\n\n  var _useState2 = useState(''),\n      errMsg = _useState2[0],\n      setErrMsg = _useState2[1];\n\n  var _useState3 = useState(false),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var onSubmitHandler = function onSubmitHandler(event) {\n    var accounts;\n    return _regeneratorRuntime.async(function onSubmitHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            setLoading(true);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n          case 5:\n            accounts = _context.sent;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(factory.methods.createCampaigns(miniContribution).send({\n              from: accounts[0]\n            }));\n\n          case 8:\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](2);\n            setErrMsg(_context.t0.message);\n\n          case 13:\n            setLoading(false);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 10]]);\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Create a Campaign\"), __jsx(Form, {\n    error: !!errMsg,\n    onSubmit: onSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Minimum Contribution\"), __jsx(Input, {\n    label: \"wei\",\n    labelPosition: \"right\",\n    value: miniContribution,\n    onChange: function onChange(event) {\n      return setMiniContribution(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), __jsx(Message, {\n    error: true,\n    header: \"Oops!\",\n    content: errMsg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), __jsx(Button, {\n    loading: loading,\n    primary: true,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Create!\")));\n};\n\nexport default CampaignNew;","map":{"version":3,"sources":["/home/beast/Desktop/myGithub/kickstarter-ethereum/pages/campaigns/new.js"],"names":["React","useState","Form","Button","Input","Message","Layout","factory","web3","CampaignNew","props","miniContribution","setMiniContribution","errMsg","setErrMsg","loading","setLoading","onSubmitHandler","event","preventDefault","eth","getAccounts","accounts","methods","createCampaigns","send","from","message","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,OAA9B,QAA6C,mBAA7C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA,kBACqBT,QAAQ,CAAC,EAAD,CAD7B;AAAA,MACpBU,gBADoB;AAAA,MACFC,mBADE;;AAAA,mBAECX,QAAQ,CAAC,EAAD,CAFT;AAAA,MAEpBY,MAFoB;AAAA,MAEZC,SAFY;;AAAA,mBAGGb,QAAQ,CAAC,KAAD,CAHX;AAAA,MAGpBc,OAHoB;AAAA,MAGXC,UAHW;;AAK3B,MAAMC,eAAe,GAAC,SAAhBA,eAAgB,CAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBA,YAAAA,KAAK,CAACC,cAAN;AACAH,YAAAA,UAAU,CAAC,IAAD,CAAV;AAFkB;AAAA;AAAA,6CAISR,IAAI,CAACY,GAAL,CAASC,WAAT,EAJT;;AAAA;AAIRC,YAAAA,QAJQ;AAAA;AAAA,6CAKRf,OAAO,CAACgB,OAAR,CAAgBC,eAAhB,CAAgCb,gBAAhC,EACLc,IADK,CACA;AACFC,cAAAA,IAAI,EAAEJ,QAAQ,CAAC,CAAD;AADZ,aADA,CALQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUdR,YAAAA,SAAS,CAAC,YAAIa,OAAL,CAAT;;AAVc;AAYlBX,YAAAA,UAAU,CAAC,KAAD,CAAV;;AAZkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAeA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAC,CAACH,MAAf;AAAuB,IAAA,QAAQ,EAAEI,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI,MAAC,KAAD;AACA,IAAA,KAAK,EAAC,KADN;AAEA,IAAA,aAAa,EAAC,OAFd;AAGA,IAAA,KAAK,EAAEN,gBAHP;AAIA,IAAA,QAAQ,EAAE,kBAAAO,KAAK;AAAA,aAAEN,mBAAmB,CAACM,KAAK,CAACU,MAAN,CAAaC,KAAd,CAArB;AAAA,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAUI,MAAC,OAAD;AAAS,IAAA,KAAK,MAAd;AAAe,IAAA,MAAM,EAAC,OAAtB;AAA8B,IAAA,OAAO,EAAEhB,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAWI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEE,OAAjB;AAA0B,IAAA,OAAO,MAAjC;AAAkC,IAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXJ,CAFJ,CADJ;AAkBH,CAtCD;;AAwCA,eAAeN,WAAf","sourcesContent":["import React, {useState}  from 'react';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3';\n\nconst CampaignNew = (props) => {\n    const [miniContribution, setMiniContribution] = useState('');\n    const [errMsg, setErrMsg] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const onSubmitHandler=async(event)=>{\n        event.preventDefault();\n        setLoading(true);\n        try{\n            const accounts = await web3.eth.getAccounts();\n            await factory.methods.createCampaigns(miniContribution)\n            .send({\n                from: accounts[0]\n            })\n        } catch(err){\n            setErrMsg(err.message);\n        }\n        setLoading(false);\n    }\n\n    return(\n        <Layout>\n            <h1>Create a Campaign</h1>\n            <Form error={!!errMsg} onSubmit={onSubmitHandler}>\n                <Form.Field>\n                    <label>Minimum Contribution</label>\n                    <Input\n                    label=\"wei\"\n                    labelPosition=\"right\"\n                    value={miniContribution}\n                    onChange={event=>setMiniContribution(event.target.value)}\n                    />\n                </Form.Field>\n                <Message error header=\"Oops!\" content={errMsg} />\n                <Button loading={loading} primary type=\"submit\" >Create!</Button>\n            </Form>\n        </Layout>\n    )\n}\n\nexport default CampaignNew;"]},"metadata":{},"sourceType":"module"}