{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Table, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport Campaign from \"../ethereum/campaign\";\n\nconst RequestRow = props => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    Row,\n    Cell\n  } = Table;\n  const {\n    id,\n    request,\n    approversCount\n  } = props;\n  const readyToFinalize = request.approvalCount > approversCount / 2;\n\n  const onApproveHandler = async () => {\n    const campaign = Campaign(props.address);\n    setLoading(true);\n\n    try {\n      const accounts = web3.eth.getAccounts();\n      await campaign.methods.approveRequest(props.id).send({\n        from: accounts[0]\n      });\n    } catch (err) {}\n\n    setLoading(false);\n  };\n\n  const onFinalizeHandler = async () => {\n    const campaign = Campaign(props.address);\n    setLoading(true);\n\n    try {\n      const accounts = web3.eth.getAccounts();\n      await campaign.methods.finalizeRequest(props.id).send({\n        from: accounts[0]\n      });\n    } catch (err) {}\n\n    setLoading(false);\n  };\n\n  return __jsx(Row, {\n    disabled: request.complete,\n    positive: readyToFinalize && !request.complete\n  }, __jsx(Cell, null, id), __jsx(Cell, null, request.description), __jsx(Cell, null, web3.utils.fromWei(request.value, \"ether\")), __jsx(Cell, null, request.recipient), __jsx(Cell, null, `${request.approvalCount}/${approversCount}`), __jsx(Cell, null, request.complete ? null : __jsx(Button, {\n    basic: true,\n    color: \"green\",\n    onClick: onApproveHandler\n  }, \"Approve\")), __jsx(Cell, null, request.complete ? null : __jsx(Button, {\n    basic: true,\n    color: \"teal\",\n    onClick: onFinalizeHandler\n  }, \"Finalize\")));\n};\n\nexport default RequestRow;","map":{"version":3,"sources":["/home/beast/Desktop/myGithub/kickstarter-ethereum/components/RequestRow.js"],"names":["React","useState","Table","Button","web3","Campaign","RequestRow","props","loading","setLoading","Row","Cell","id","request","approversCount","readyToFinalize","approvalCount","onApproveHandler","campaign","address","accounts","eth","getAccounts","methods","approveRequest","send","from","err","onFinalizeHandler","finalizeRequest","complete","description","utils","fromWei","value","recipient"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,mBAA9B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAES,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAgBT,KAAtB;AACA,QAAM;AAAEU,IAAAA,EAAF;AAAMC,IAAAA,OAAN;AAAeC,IAAAA;AAAf,MAAkCP,KAAxC;AACA,QAAMQ,eAAe,GAAGF,OAAO,CAACG,aAAR,GAAwBF,cAAc,GAAG,CAAjE;;AAEA,QAAMG,gBAAgB,GAAG,YAAY;AACnC,UAAMC,QAAQ,GAAGb,QAAQ,CAACE,KAAK,CAACY,OAAP,CAAzB;AACAV,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACF,YAAMW,QAAQ,GAAGhB,IAAI,CAACiB,GAAL,CAASC,WAAT,EAAjB;AACA,YAAMJ,QAAQ,CAACK,OAAT,CAAiBC,cAAjB,CAAgCjB,KAAK,CAACK,EAAtC,EAA0Ca,IAA1C,CAA+C;AACnDC,QAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD;AADqC,OAA/C,CAAN;AAGD,KALD,CAKE,OAAOO,GAAP,EAAY,CAAE;;AAChBlB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAVD;;AAYA,QAAMmB,iBAAiB,GAAG,YAAY;AACpC,UAAMV,QAAQ,GAAGb,QAAQ,CAACE,KAAK,CAACY,OAAP,CAAzB;AACAV,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACF,YAAMW,QAAQ,GAAGhB,IAAI,CAACiB,GAAL,CAASC,WAAT,EAAjB;AACA,YAAMJ,QAAQ,CAACK,OAAT,CAAiBM,eAAjB,CAAiCtB,KAAK,CAACK,EAAvC,EAA2Ca,IAA3C,CAAgD;AACpDC,QAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD;AADsC,OAAhD,CAAN;AAGD,KALD,CAKE,OAAOO,GAAP,EAAY,CAAE;;AAChBlB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAVD;;AAYA,SACE,MAAC,GAAD;AACE,IAAA,QAAQ,EAAEI,OAAO,CAACiB,QADpB;AAEE,IAAA,QAAQ,EAAEf,eAAe,IAAI,CAACF,OAAO,CAACiB;AAFxC,KAIE,MAAC,IAAD,QAAOlB,EAAP,CAJF,EAKE,MAAC,IAAD,QAAOC,OAAO,CAACkB,WAAf,CALF,EAME,MAAC,IAAD,QAAO3B,IAAI,CAAC4B,KAAL,CAAWC,OAAX,CAAmBpB,OAAO,CAACqB,KAA3B,EAAkC,OAAlC,CAAP,CANF,EAOE,MAAC,IAAD,QAAOrB,OAAO,CAACsB,SAAf,CAPF,EAQE,MAAC,IAAD,QAAQ,GAAEtB,OAAO,CAACG,aAAc,IAAGF,cAAe,EAAlD,CARF,EASE,MAAC,IAAD,QACGD,OAAO,CAACiB,QAAR,GAAmB,IAAnB,GACC,MAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,KAAK,EAAC,OAApB;AAA4B,IAAA,OAAO,EAAEb;AAArC,eAFJ,CATF,EAgBE,MAAC,IAAD,QACGJ,OAAO,CAACiB,QAAR,GAAmB,IAAnB,GACC,MAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,KAAK,EAAC,MAApB;AAA2B,IAAA,OAAO,EAAEF;AAApC,gBAFJ,CAhBF,CADF;AA0BD,CAxDD;;AA0DA,eAAetB,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Table, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport Campaign from \"../ethereum/campaign\";\n\nconst RequestRow = props => {\n  const [loading, setLoading] = useState(false);\n  const { Row, Cell } = Table;\n  const { id, request, approversCount } = props;\n  const readyToFinalize = request.approvalCount > approversCount / 2;\n\n  const onApproveHandler = async () => {\n    const campaign = Campaign(props.address);\n    setLoading(true);\n    try {\n      const accounts = web3.eth.getAccounts();\n      await campaign.methods.approveRequest(props.id).send({\n        from: accounts[0]\n      });\n    } catch (err) {}\n    setLoading(false);\n  };\n\n  const onFinalizeHandler = async () => {\n    const campaign = Campaign(props.address);\n    setLoading(true);\n    try {\n      const accounts = web3.eth.getAccounts();\n      await campaign.methods.finalizeRequest(props.id).send({\n        from: accounts[0]\n      });\n    } catch (err) {}\n    setLoading(false);\n  };\n\n  return (\n    <Row\n      disabled={request.complete}\n      positive={readyToFinalize && !request.complete}\n    >\n      <Cell>{id}</Cell>\n      <Cell>{request.description}</Cell>\n      <Cell>{web3.utils.fromWei(request.value, \"ether\")}</Cell>\n      <Cell>{request.recipient}</Cell>\n      <Cell>{`${request.approvalCount}/${approversCount}`}</Cell>\n      <Cell>\n        {request.complete ? null : (\n          <Button basic color=\"green\" onClick={onApproveHandler}>\n            Approve\n          </Button>\n        )}\n      </Cell>\n      <Cell>\n        {request.complete ? null : (\n          <Button basic color=\"teal\" onClick={onFinalizeHandler}>\n            Finalize\n          </Button>\n        )}\n      </Cell>\n    </Row>\n  );\n};\n\nexport default RequestRow;\n"]},"metadata":{},"sourceType":"module"}