{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Form, Input, Message, Button } from \"semantic-ui-react\";\nimport Campaign from \"../ethereum/campaign\";\nimport web3 from \"../ethereum/web3\";\nimport { Router } from \"../routes\";\n\nconst ContributeForm = props => {\n  const {\n    0: input,\n    1: setInput\n  } = useState(\"\");\n  const {\n    0: errMsg,\n    1: setErrMsg\n  } = useState(\"\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const onSubmitHandler = async event => {\n    event.preventDefault();\n    const campaign = Campaign(props.address);\n    setLoading(true);\n    setErrMsg(\"\");\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.contribution().send({\n        from: accounts[0],\n        value: web3.utils.toWei(input, \"ether\")\n      });\n      Router.replaceRoute(`/campaigns/${props.address}`);\n    } catch (err) {\n      setErrMsg(err.message);\n    }\n\n    setLoading(false);\n  };\n\n  return __jsx(Form, {\n    error: !!errMsg,\n    onSubmit: onSubmitHandler\n  }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount to Contribute\"), __jsx(Input, {\n    label: \"ether\",\n    labelPosition: \"right\",\n    value: input,\n    onChange: event => setInput(event.target.value)\n  })), __jsx(Message, {\n    error: true,\n    header: \"Oops!\",\n    content: errMsg\n  }), __jsx(Button, {\n    loading: loading,\n    primary: true,\n    type: \"submit\"\n  }, \"Contribute!\"));\n};\n\nexport default ContributeForm;","map":null,"metadata":{},"sourceType":"module"}