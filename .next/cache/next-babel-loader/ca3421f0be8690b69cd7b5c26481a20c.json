{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport { Button, Table } from \"semantic-ui-react\";\nimport { Link } from \"../../../routes\";\nimport Campaign from \"../../../ethereum/campaign\";\n\nvar RequestIndex = function RequestIndex(props) {\n  var Header = Table.Header,\n      Row = Table.Row,\n      HeaderCell = Table.HeaderCell,\n      Body = Table.Body;\n  return __jsx(Layout, null, __jsx(\"h3\", null, \"Requests\"), __jsx(Link, {\n    route: \"/campaigns/\".concat(props.address, \"/requests/new\")\n  }, __jsx(\"a\", null, __jsx(Button, {\n    primary: true\n  }, \"Add Request\"))));\n};\n\nRequestIndex.getInitialProps = function _callee(props) {\n  var address, campaign, requestCount, requests;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          address = props.query.address;\n          campaign = Campaign(address);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(campaign.methods.getRequestsCount().call());\n\n        case 4:\n          requestCount = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(_Promise.all(Array(_parseInt(requestCount)).fill().map(function (el, index) {\n            return campaign.methods.requests(index).call();\n          })));\n\n        case 7:\n          requests = _context.sent;\n          return _context.abrupt(\"return\", {\n            address: address,\n            requests: requests,\n            requestCount: requestCount\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default RequestIndex;","map":{"version":3,"sources":["/home/beast/Desktop/myGithub/kickstarter-ethereum/pages/campaigns/requests/index.js"],"names":["React","Layout","Button","Table","Link","Campaign","RequestIndex","props","Header","Row","HeaderCell","Body","address","getInitialProps","query","campaign","methods","getRequestsCount","call","requestCount","all","Array","fill","map","el","index","requests"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA,MACpBC,MADoB,GACcL,KADd,CACpBK,MADoB;AAAA,MACZC,GADY,GACcN,KADd,CACZM,GADY;AAAA,MACPC,UADO,GACcP,KADd,CACPO,UADO;AAAA,MACKC,IADL,GACcR,KADd,CACKQ,IADL;AAG5B,SACE,MAAC,MAAD,QACE,6BADF,EAEE,MAAC,IAAD;AAAM,IAAA,KAAK,uBAAgBJ,KAAK,CAACK,OAAtB;AAAX,KACE,iBACE,MAAC,MAAD;AAAQ,IAAA,OAAO;AAAf,mBADF,CADF,CAFF,CADF;AAUD,CAbD;;AAeAN,YAAY,CAACO,eAAb,GAA+B,iBAAMN,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBK,UAAAA,OADqB,GACTL,KAAK,CAACO,KADG,CACrBF,OADqB;AAEvBG,UAAAA,QAFuB,GAEZV,QAAQ,CAACO,OAAD,CAFI;AAAA;AAAA,2CAGFG,QAAQ,CAACC,OAAT,CAAiBC,gBAAjB,GAAoCC,IAApC,EAHE;;AAAA;AAGvBC,UAAAA,YAHuB;AAAA;AAAA,2CAIN,SAAQC,GAAR,CACrBC,KAAK,CAAC,UAASF,YAAT,CAAD,CAAL,CACGG,IADH,GAEGC,GAFH,CAEO,UAACC,EAAD,EAAKC,KAAL;AAAA,mBAAeV,QAAQ,CAACC,OAAT,CAAiBU,QAAjB,CAA0BD,KAA1B,EAAiCP,IAAjC,EAAf;AAAA,WAFP,CADqB,CAJM;;AAAA;AAIvBQ,UAAAA,QAJuB;AAAA,2CAStB;AAAEd,YAAAA,OAAO,EAAPA,OAAF;AAAWc,YAAAA,QAAQ,EAARA,QAAX;AAAqBP,YAAAA,YAAY,EAAZA;AAArB,WATsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/B;;AAYA,eAAeb,YAAf","sourcesContent":["import React from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport { Button, Table } from \"semantic-ui-react\";\nimport { Link } from \"../../../routes\";\nimport Campaign from \"../../../ethereum/campaign\";\n\nconst RequestIndex = props => {\n  const { Header, Row, HeaderCell, Body } = Table;\n\n  return (\n    <Layout>\n      <h3>Requests</h3>\n      <Link route={`/campaigns/${props.address}/requests/new`}>\n        <a>\n          <Button primary>Add Request</Button>\n        </a>\n      </Link>\n    </Layout>\n  );\n};\n\nRequestIndex.getInitialProps = async props => {\n  const { address } = props.query;\n  const campaign = Campaign(address);\n  const requestCount = await campaign.methods.getRequestsCount().call();\n  const requests = await Promise.all(\n    Array(parseInt(requestCount))\n      .fill()\n      .map((el, index) => campaign.methods.requests(index).call())\n  );\n  return { address, requests, requestCount };\n};\n\nexport default RequestIndex;\n"]},"metadata":{},"sourceType":"module"}