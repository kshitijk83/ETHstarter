{"ast":null,"code":"var _jsxFileName = \"/home/beast/Desktop/myGithub/kickstarter-ethereum/pages/campaigns/new.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3';\n\nconst CampaignNew = props => {\n  const {\n    0: miniContribution,\n    1: setMiniContribution\n  } = useState('');\n  const {\n    0: errMsg,\n    1: setErrMsg\n  } = useState('');\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const onSubmitHandler = async event => {\n    event.preventDefault();\n    setLoading(true);\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await factory.methods.createCampaigns(miniContribution).send({\n        from: accounts[0]\n      });\n    } catch (err) {\n      setErrMsg(err.message);\n    }\n\n    setLoading(false);\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Create a Campaign\"), __jsx(Form, {\n    error: !!errMsg,\n    onSubmit: onSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Minimum Contribution\"), __jsx(Input, {\n    label: \"wei\",\n    labelPosition: \"right\",\n    value: miniContribution,\n    onChange: event => setMiniContribution(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), __jsx(Message, {\n    error: true,\n    header: \"Oops!\",\n    content: errMsg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), __jsx(Button, {\n    loading: loading,\n    primary: true,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Create!\")));\n};\n\nexport default CampaignNew;","map":{"version":3,"sources":["/home/beast/Desktop/myGithub/kickstarter-ethereum/pages/campaigns/new.js"],"names":["React","useState","Form","Button","Input","Message","Layout","factory","web3","CampaignNew","props","miniContribution","setMiniContribution","errMsg","setErrMsg","loading","setLoading","onSubmitHandler","event","preventDefault","accounts","eth","getAccounts","methods","createCampaigns","send","from","err","message","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,OAA9B,QAA6C,mBAA7C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAM;AAAA,OAACC,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CX,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM;AAAA,OAACY,MAAD;AAAA,OAASC;AAAT,MAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACc,OAAD;AAAA,OAAUC;AAAV,MAAwBf,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMgB,eAAe,GAAC,MAAMC,KAAN,IAAc;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAG;AACC,YAAMI,QAAQ,GAAG,MAAMZ,IAAI,CAACa,GAAL,CAASC,WAAT,EAAvB;AACA,YAAMf,OAAO,CAACgB,OAAR,CAAgBC,eAAhB,CAAgCb,gBAAhC,EACLc,IADK,CACA;AACFC,QAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD;AADZ,OADA,CAAN;AAIH,KAND,CAME,OAAMO,GAAN,EAAU;AACRb,MAAAA,SAAS,CAACa,GAAG,CAACC,OAAL,CAAT;AACH;;AACDZ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAbD;;AAeA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAC,CAACH,MAAf;AAAuB,IAAA,QAAQ,EAAEI,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI,MAAC,KAAD;AACA,IAAA,KAAK,EAAC,KADN;AAEA,IAAA,aAAa,EAAC,OAFd;AAGA,IAAA,KAAK,EAAEN,gBAHP;AAIA,IAAA,QAAQ,EAAEO,KAAK,IAAEN,mBAAmB,CAACM,KAAK,CAACW,MAAN,CAAaC,KAAd,CAJpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAUI,MAAC,OAAD;AAAS,IAAA,KAAK,MAAd;AAAe,IAAA,MAAM,EAAC,OAAtB;AAA8B,IAAA,OAAO,EAAEjB,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAWI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEE,OAAjB;AAA0B,IAAA,OAAO,MAAjC;AAAkC,IAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXJ,CAFJ,CADJ;AAkBH,CAtCD;;AAwCA,eAAeN,WAAf","sourcesContent":["import React, {useState}  from 'react';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3';\n\nconst CampaignNew = (props) => {\n    const [miniContribution, setMiniContribution] = useState('');\n    const [errMsg, setErrMsg] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const onSubmitHandler=async(event)=>{\n        event.preventDefault();\n        setLoading(true);\n        try{\n            const accounts = await web3.eth.getAccounts();\n            await factory.methods.createCampaigns(miniContribution)\n            .send({\n                from: accounts[0]\n            })\n        } catch(err){\n            setErrMsg(err.message);\n        }\n        setLoading(false);\n    }\n\n    return(\n        <Layout>\n            <h1>Create a Campaign</h1>\n            <Form error={!!errMsg} onSubmit={onSubmitHandler}>\n                <Form.Field>\n                    <label>Minimum Contribution</label>\n                    <Input\n                    label=\"wei\"\n                    labelPosition=\"right\"\n                    value={miniContribution}\n                    onChange={event=>setMiniContribution(event.target.value)}\n                    />\n                </Form.Field>\n                <Message error header=\"Oops!\" content={errMsg} />\n                <Button loading={loading} primary type=\"submit\" >Create!</Button>\n            </Form>\n        </Layout>\n    )\n}\n\nexport default CampaignNew;"]},"metadata":{},"sourceType":"module"}