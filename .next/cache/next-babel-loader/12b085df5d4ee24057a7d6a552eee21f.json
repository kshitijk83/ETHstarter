{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Table, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport Campaign from \"../ethereum/campaign\";\n\nvar RequestRow = function RequestRow(props) {\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var Row = Table.Row,\n      Cell = Table.Cell;\n  var id = props.id,\n      request = props.request,\n      approversCount = props.approversCount;\n  var readyToFinalize = request.approvalCount > approversCount / 2;\n\n  var onApproveHandler = function onApproveHandler() {\n    var campaign, accounts;\n    return _regeneratorRuntime.async(function onApproveHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            campaign = Campaign(props.address);\n            setLoading(true);\n            _context.prev = 2;\n            accounts = web3.eth.getAccounts();\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(campaign.methods.approveRequest(props.id).send({\n              from: accounts[0]\n            }));\n\n          case 6:\n            _context.next = 10;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](2);\n\n          case 10:\n            setLoading(false);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 8]]);\n  };\n\n  var onFinalizeHandler = function onFinalizeHandler() {\n    var campaign, accounts;\n    return _regeneratorRuntime.async(function onFinalizeHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            campaign = Campaign(props.address);\n            setLoading(true);\n            _context2.prev = 2;\n            accounts = web3.eth.getAccounts();\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(campaign.methods.finalizeRequest(props.id).send({\n              from: accounts[0]\n            }));\n\n          case 6:\n            _context2.next = 10;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](2);\n\n          case 10:\n            setLoading(false);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[2, 8]]);\n  };\n\n  return __jsx(Row, {\n    disabled: request.complete,\n    positive: readyToFinalize && !request.complete\n  }, __jsx(Cell, null, id), __jsx(Cell, null, request.description), __jsx(Cell, null, web3.utils.fromWei(request.value, \"ether\")), __jsx(Cell, null, request.recipient), __jsx(Cell, null, \"\".concat(request.approvalCount, \"/\").concat(approversCount)), __jsx(Cell, null, request.complete ? null : __jsx(Button, {\n    basic: true,\n    color: \"green\",\n    onClick: onApproveHandler\n  }, \"Approve\")), __jsx(Cell, null, request.complete ? null : __jsx(Button, {\n    basic: true,\n    color: \"teal\",\n    onClick: onFinalizeHandler\n  }, \"Finalize\")));\n};\n\nexport default RequestRow;","map":{"version":3,"sources":["/home/beast/Desktop/myGithub/kickstarter-ethereum/components/RequestRow.js"],"names":["React","useState","Table","Button","web3","Campaign","RequestRow","props","loading","setLoading","Row","Cell","id","request","approversCount","readyToFinalize","approvalCount","onApproveHandler","campaign","address","accounts","eth","getAccounts","methods","approveRequest","send","from","onFinalizeHandler","finalizeRequest","complete","description","utils","fromWei","value","recipient"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Table, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport Campaign from \"../ethereum/campaign\";\n\nconst RequestRow = props => {\n  const [loading, setLoading] = useState(false);\n  const { Row, Cell } = Table;\n  const { id, request, approversCount } = props;\n  const readyToFinalize = request.approvalCount > approversCount / 2;\n\n  const onApproveHandler = async () => {\n    const campaign = Campaign(props.address);\n    setLoading(true);\n    try {\n      const accounts = web3.eth.getAccounts();\n      await campaign.methods.approveRequest(props.id).send({\n        from: accounts[0]\n      });\n    } catch (err) {}\n    setLoading(false);\n  };\n\n  const onFinalizeHandler = async () => {\n    const campaign = Campaign(props.address);\n    setLoading(true);\n    try {\n      const accounts = web3.eth.getAccounts();\n      await campaign.methods.finalizeRequest(props.id).send({\n        from: accounts[0]\n      });\n    } catch (err) {}\n    setLoading(false);\n  };\n\n  return (\n    <Row\n      disabled={request.complete}\n      positive={readyToFinalize && !request.complete}\n    >\n      <Cell>{id}</Cell>\n      <Cell>{request.description}</Cell>\n      <Cell>{web3.utils.fromWei(request.value, \"ether\")}</Cell>\n      <Cell>{request.recipient}</Cell>\n      <Cell>{`${request.approvalCount}/${approversCount}`}</Cell>\n      <Cell>\n        {request.complete ? null : (\n          <Button basic color=\"green\" onClick={onApproveHandler}>\n            Approve\n          </Button>\n        )}\n      </Cell>\n      <Cell>\n        {request.complete ? null : (\n          <Button basic color=\"teal\" onClick={onFinalizeHandler}>\n            Finalize\n          </Button>\n        )}\n      </Cell>\n    </Row>\n  );\n};\n\nexport default RequestRow;\n"]},"metadata":{},"sourceType":"module"}