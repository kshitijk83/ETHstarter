{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Campaign from \"../../../ethereum/campaign\";\nimport web3 from \"../../../ethereum/web3\";\nimport Layout from \"../../../components/Layout\";\nimport { Form, Input, Button, Message } from \"semantic-ui-react\";\nimport { Link, Router } from \"../../../routes\";\n\nconst RequestNew = props => {\n  const {\n    0: value,\n    1: setValue\n  } = useState(\"\");\n  const {\n    0: description,\n    1: setDescription\n  } = useState(\"\");\n  const {\n    0: recipient,\n    1: setRecipient\n  } = useState(\"\");\n  const {\n    0: errMsg,\n    1: setErrMsg\n  } = useState(\"\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const onSubmitHandler = async event => {\n    event.preventDefault();\n    const campaign = Campaign(props.address);\n    setLoading(true);\n    setErrMsg(\"\");\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.createRequest(description, web3.utils.toWei(value, \"ether\"), recipient).send({\n        from: accounts[0]\n      });\n      Router.pushRoute(`/campaigns/${props.address}/requests`);\n    } catch (err) {\n      setErrMsg(err.message);\n    }\n\n    setLoading(false);\n  };\n\n  return __jsx(Layout, null, __jsx(Link, {\n    route: `/campaigns/${props.address}/requests`\n  }, __jsx(\"a\", null, \"Back\")), __jsx(\"h3\", null, \"Create A Request\"), __jsx(Form, {\n    error: !!errMsg,\n    onSubmit: onSubmitHandler\n  }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Description\"), __jsx(Input, {\n    value: description,\n    onChange: event => setDescription(event.target.value)\n  })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Value in Ether\"), __jsx(Input, {\n    value: value,\n    onChange: event => setValue(event.target.value)\n  })), __jsx(Form.Field, null, __jsx(\"label\", null, \"recipient\"), __jsx(Input, {\n    value: recipient,\n    onChange: event => setRecipient(event.target.value)\n  })), __jsx(Message, {\n    error: true,\n    header: \"Oops!\",\n    content: errMsg\n  }), __jsx(Button, {\n    loading: loading,\n    type: \"submit\",\n    primary: true\n  }, \"Create!\")));\n};\n\nRequestNew.getInitialProps = async props => {\n  return {\n    address: props.query.address\n  };\n};\n\nexport default RequestNew;","map":null,"metadata":{},"sourceType":"module"}