{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport { Button, Table } from \"semantic-ui-react\";\nimport { Link } from \"../../../routes\";\nimport Campaign from \"../../../ethereum/campaign\";\nimport RequestRow from \"../../../components/RequestRow\";\n\nvar RequestIndex = function RequestIndex(props) {\n  var Header = Table.Header,\n      Row = Table.Row,\n      HeaderCell = Table.HeaderCell,\n      Body = Table.Body;\n\n  var renderRow = function renderRow() {\n    return props.requests.map(function (request, index) {\n      return __jsx(RequestRow, {\n        key: index,\n        id: index,\n        approversCount: props.approversCount,\n        request: request,\n        address: props.address\n      });\n    });\n  };\n\n  return __jsx(Layout, null, __jsx(\"h3\", null, \"Requests\"), __jsx(Link, {\n    route: \"/campaigns/\".concat(props.address, \"/requests/new\")\n  }, __jsx(\"a\", null, __jsx(Button, {\n    floated: \"right\",\n    style: {\n      marginBottom: 10\n    },\n    primary: true\n  }, \"Add Request\"))), __jsx(Table, null, __jsx(Header, null, __jsx(Row, null, __jsx(HeaderCell, null, \"ID\"), __jsx(HeaderCell, null, \"Description\"), __jsx(HeaderCell, null, \"Amount\"), __jsx(HeaderCell, null, \"Recipient\"), __jsx(HeaderCell, null, \"Approval Count\"), __jsx(HeaderCell, null, \"Approve\"), __jsx(HeaderCell, null, \"Finalize\"))), __jsx(Body, null, renderRow())), __jsx(\"div\", null, \"Found \", props.requestCount, \" requests\"));\n};\n\nRequestIndex.getInitialProps = function _callee(props) {\n  var address, campaign, requestCount, approversCount, requests;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          address = props.query.address;\n          campaign = Campaign(address);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(campaign.methods.getRequestsCount().call());\n\n        case 4:\n          requestCount = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(campaign.methods.approversCount().call());\n\n        case 7:\n          approversCount = _context.sent;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(_Promise.all(Array(_parseInt(requestCount)).fill().map(function (el, index) {\n            return campaign.methods.requests(index).call();\n          })));\n\n        case 10:\n          requests = _context.sent;\n          return _context.abrupt(\"return\", {\n            address: address,\n            requests: requests,\n            requestCount: requestCount,\n            approversCount: approversCount\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default RequestIndex;","map":{"version":3,"sources":["/home/beast/Desktop/myGithub/kickstarter-ethereum/pages/campaigns/requests/index.js"],"names":["React","Layout","Button","Table","Link","Campaign","RequestRow","RequestIndex","props","Header","Row","HeaderCell","Body","renderRow","requests","map","request","index","approversCount","address","marginBottom","requestCount","getInitialProps","query","campaign","methods","getRequestsCount","call","all","Array","fill","el"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport { Button, Table } from \"semantic-ui-react\";\nimport { Link } from \"../../../routes\";\nimport Campaign from \"../../../ethereum/campaign\";\nimport RequestRow from \"../../../components/RequestRow\";\n\nconst RequestIndex = props => {\n  const { Header, Row, HeaderCell, Body } = Table;\n\n  const renderRow = () => {\n    return props.requests.map((request, index) => {\n      return (\n        <RequestRow\n          key={index}\n          id={index}\n          approversCount={props.approversCount}\n          request={request}\n          address={props.address}\n        />\n      );\n    });\n  };\n\n  return (\n    <Layout>\n      <h3>Requests</h3>\n      <Link route={`/campaigns/${props.address}/requests/new`}>\n        <a>\n          <Button floated=\"right\" style={{ marginBottom: 10 }} primary>\n            Add Request\n          </Button>\n        </a>\n      </Link>\n      <Table>\n        <Header>\n          <Row>\n            <HeaderCell>ID</HeaderCell>\n            <HeaderCell>Description</HeaderCell>\n            <HeaderCell>Amount</HeaderCell>\n            <HeaderCell>Recipient</HeaderCell>\n            <HeaderCell>Approval Count</HeaderCell>\n            <HeaderCell>Approve</HeaderCell>\n            <HeaderCell>Finalize</HeaderCell>\n          </Row>\n        </Header>\n        <Body>{renderRow()}</Body>\n      </Table>\n      <div>Found {props.requestCount} requests</div>\n    </Layout>\n  );\n};\n\nRequestIndex.getInitialProps = async props => {\n  const { address } = props.query;\n  const campaign = Campaign(address);\n  const requestCount = await campaign.methods.getRequestsCount().call();\n  const approversCount = await campaign.methods.approversCount().call();\n  const requests = await Promise.all(\n    Array(parseInt(requestCount))\n      .fill()\n      .map((el, index) => campaign.methods.requests(index).call())\n  );\n  return { address, requests, requestCount, approversCount };\n};\n\nexport default RequestIndex;\n"]},"metadata":{},"sourceType":"module"}