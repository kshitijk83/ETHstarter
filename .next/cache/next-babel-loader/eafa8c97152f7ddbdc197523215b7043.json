{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3';\nimport { Router } from '../../routes';\n\nconst CampaignNew = props => {\n  const {\n    0: miniContribution,\n    1: setMiniContribution\n  } = useState('');\n  const {\n    0: errMsg,\n    1: setErrMsg\n  } = useState('');\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const onSubmitHandler = async event => {\n    event.preventDefault();\n    setLoading(true);\n    setErrMsg('');\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await factory.methods.createCampaigns(miniContribution).send({\n        from: accounts[0]\n      });\n      Router.pushRoute('/');\n    } catch (err) {\n      setErrMsg(err.message);\n    }\n\n    setLoading(false);\n  };\n\n  return __jsx(Layout, null, __jsx(\"h1\", null, \"Create a Campaign\"), __jsx(Form, {\n    error: !!errMsg,\n    onSubmit: onSubmitHandler\n  }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Minimum Contribution\"), __jsx(Input, {\n    label: \"wei\",\n    labelPosition: \"right\",\n    value: miniContribution,\n    onChange: event => setMiniContribution(event.target.value)\n  })), __jsx(Message, {\n    error: true,\n    header: \"Oops!\",\n    content: errMsg\n  }), __jsx(Button, {\n    loading: loading,\n    primary: true,\n    type: \"submit\"\n  }, \"Create!\")));\n};\n\nexport default CampaignNew;","map":{"version":3,"sources":["/home/beast/Desktop/myGithub/kickstarter-ethereum/pages/campaigns/new.js"],"names":["React","useState","Form","Button","Input","Message","Layout","factory","web3","Router","CampaignNew","props","miniContribution","setMiniContribution","errMsg","setErrMsg","loading","setLoading","onSubmitHandler","event","preventDefault","accounts","eth","getAccounts","methods","createCampaigns","send","from","pushRoute","err","message","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,OAA9B,QAA6C,mBAA7C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,MAAT,QAAuB,cAAvB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAM;AAAA,OAACC,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CZ,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM;AAAA,OAACa,MAAD;AAAA,OAASC;AAAT,MAAsBd,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACe,OAAD;AAAA,OAAUC;AAAV,MAAwBhB,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMiB,eAAe,GAAC,MAAMC,KAAN,IAAc;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,IAAAA,SAAS,CAAC,EAAD,CAAT;;AACA,QAAG;AACC,YAAMM,QAAQ,GAAG,MAAMb,IAAI,CAACc,GAAL,CAASC,WAAT,EAAvB;AACA,YAAMhB,OAAO,CAACiB,OAAR,CAAgBC,eAAhB,CAAgCb,gBAAhC,EACLc,IADK,CACA;AACFC,QAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD;AADZ,OADA,CAAN;AAIAZ,MAAAA,MAAM,CAACmB,SAAP,CAAiB,GAAjB;AACH,KAPD,CAOE,OAAMC,GAAN,EAAU;AACRd,MAAAA,SAAS,CAACc,GAAG,CAACC,OAAL,CAAT;AACH;;AACDb,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAfD;;AAiBA,SACI,MAAC,MAAD,QACI,sCADJ,EAEI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAC,CAACH,MAAf;AAAuB,IAAA,QAAQ,EAAEI;AAAjC,KACI,MAAC,IAAD,CAAM,KAAN,QACI,4CADJ,EAEI,MAAC,KAAD;AACA,IAAA,KAAK,EAAC,KADN;AAEA,IAAA,aAAa,EAAC,OAFd;AAGA,IAAA,KAAK,EAAEN,gBAHP;AAIA,IAAA,QAAQ,EAAEO,KAAK,IAAEN,mBAAmB,CAACM,KAAK,CAACY,MAAN,CAAaC,KAAd;AAJpC,IAFJ,CADJ,EAUI,MAAC,OAAD;AAAS,IAAA,KAAK,MAAd;AAAe,IAAA,MAAM,EAAC,OAAtB;AAA8B,IAAA,OAAO,EAAElB;AAAvC,IAVJ,EAWI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEE,OAAjB;AAA0B,IAAA,OAAO,MAAjC;AAAkC,IAAA,IAAI,EAAC;AAAvC,eAXJ,CAFJ,CADJ;AAkBH,CAxCD;;AA0CA,eAAeN,WAAf","sourcesContent":["import React, {useState}  from 'react';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3';\nimport { Router } from '../../routes';\n\nconst CampaignNew = (props) => {\n    const [miniContribution, setMiniContribution] = useState('');\n    const [errMsg, setErrMsg] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const onSubmitHandler=async(event)=>{\n        event.preventDefault();\n        setLoading(true);\n        setErrMsg('');\n        try{\n            const accounts = await web3.eth.getAccounts();\n            await factory.methods.createCampaigns(miniContribution)\n            .send({\n                from: accounts[0]\n            });\n            Router.pushRoute('/')\n        } catch(err){\n            setErrMsg(err.message);\n        }\n        setLoading(false);\n    }\n\n    return(\n        <Layout>\n            <h1>Create a Campaign</h1>\n            <Form error={!!errMsg} onSubmit={onSubmitHandler}>\n                <Form.Field>\n                    <label>Minimum Contribution</label>\n                    <Input\n                    label=\"wei\"\n                    labelPosition=\"right\"\n                    value={miniContribution}\n                    onChange={event=>setMiniContribution(event.target.value)}\n                    />\n                </Form.Field>\n                <Message error header=\"Oops!\" content={errMsg} />\n                <Button loading={loading} primary type=\"submit\" >Create!</Button>\n            </Form>\n        </Layout>\n    )\n}\n\nexport default CampaignNew;"]},"metadata":{},"sourceType":"module"}