{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Campaign from \"../../../ethereum/campaign\";\nimport web3 from \"../../../ethereum/web3\";\nimport Layout from \"../../../components/Layout\";\nimport { Form, Input, Button, Message } from \"semantic-ui-react\";\n\nconst RequestNew = props => {\n  const {\n    0: value,\n    1: setValue\n  } = useState(\"\");\n  const {\n    0: description,\n    1: setDescription\n  } = useState(\"\");\n  const {\n    0: recipient,\n    1: setRecipient\n  } = useState(\"\");\n  const {\n    0: errMsg,\n    1: setErrMsg\n  } = useState(\"\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const onSubmitHandler = async event => {\n    event.preventDefault();\n    const campaign = Campaign(props.address);\n    setLoading(true);\n    setErrMsg(\"\");\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.createRequest(description, web3.utils.toWei(value, \"ether\"), recipient).send({\n        from: accounts[0]\n      }); //   Router.pushRoute('/');\n    } catch (err) {\n      setErrMsg(err.message);\n    }\n\n    setLoading(false);\n  };\n\n  return __jsx(Layout, null, __jsx(\"h3\", null, \"Create A Request\"), __jsx(Form, {\n    error: !!errMsg,\n    onSubmit: onSubmitHandler\n  }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Description\"), __jsx(Input, {\n    value: description,\n    onChange: event => setDescription(event.target.value)\n  })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Value in Ether\"), __jsx(Input, {\n    value: value,\n    onChange: event => setValue(event.target.value)\n  })), __jsx(Form.Field, null, __jsx(\"label\", null, \"recipient\"), __jsx(Input, {\n    value: recipient,\n    onChange: event => setRecipient(event.target.value)\n  })), __jsx(Message, {\n    error: true,\n    header: \"Oops!\",\n    content: errMsg\n  }), __jsx(Button, {\n    loading: loading,\n    type: \"submit\",\n    primary: true\n  }, \"Create!\")));\n};\n\nRequestNew.getInitialProps = async props => {\n  return {\n    address: props.query.address\n  };\n};\n\nexport default RequestNew;","map":{"version":3,"sources":["/home/beast/Desktop/myGithub/kickstarter-ethereum/pages/campaigns/requests/new.js"],"names":["React","useState","Campaign","web3","Layout","Form","Input","Button","Message","RequestNew","props","value","setValue","description","setDescription","recipient","setRecipient","errMsg","setErrMsg","loading","setLoading","onSubmitHandler","event","preventDefault","campaign","address","accounts","eth","getAccounts","methods","createRequest","utils","toWei","send","from","err","message","target","getInitialProps","query"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Campaign from \"../../../ethereum/campaign\";\nimport web3 from \"../../../ethereum/web3\";\nimport Layout from \"../../../components/Layout\";\nimport { Form, Input, Button, Message } from \"semantic-ui-react\";\n\nconst RequestNew = props => {\n  const [value, setValue] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [recipient, setRecipient] = useState(\"\");\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const onSubmitHandler = async event => {\n    event.preventDefault();\n    const campaign = Campaign(props.address);\n    setLoading(true);\n    setErrMsg(\"\");\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods\n        .createRequest(description, web3.utils.toWei(value, \"ether\"), recipient)\n        .send({ from: accounts[0] });\n      //   Router.pushRoute('/');\n    } catch (err) {\n      setErrMsg(err.message);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <Layout>\n      <h3>Create A Request</h3>\n      <Form error={!!errMsg} onSubmit={onSubmitHandler}>\n        <Form.Field>\n          <label>Description</label>\n          <Input\n            value={description}\n            onChange={event => setDescription(event.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Value in Ether</label>\n          <Input\n            value={value}\n            onChange={event => setValue(event.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>recipient</label>\n          <Input\n            value={recipient}\n            onChange={event => setRecipient(event.target.value)}\n          />\n        </Form.Field>\n        <Message error header=\"Oops!\" content={errMsg} />\n        <Button loading={loading} type=\"submit\" primary>\n          Create!\n        </Button>\n      </Form>\n    </Layout>\n  );\n};\n\nRequestNew.getInitialProps = async props => {\n  return { address: props.query.address };\n};\n\nexport default RequestNew;\n"]},"metadata":{},"sourceType":"module"}