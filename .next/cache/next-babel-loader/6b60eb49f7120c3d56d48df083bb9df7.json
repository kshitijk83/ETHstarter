{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Campaign from \"../../../ethereum/campaign\";\nimport web3 from \"../../../ethereum/web3\";\nimport Layout from \"../../../components/Layout\";\nimport { Form, Input, Button, Message } from \"semantic-ui-react\";\n\nvar RequestNew = function RequestNew(props) {\n  var _useState = useState(\"\"),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      description = _useState2[0],\n      setDescription = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      recipient = _useState3[0],\n      setRecipient = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      errMsg = _useState4[0],\n      setErrMsg = _useState4[1];\n\n  var _useState5 = useState(false),\n      loading = _useState5[0],\n      setLoading = _useState5[1];\n\n  var onSubmitHandler = function onSubmitHandler(event) {\n    var campaign, accounts;\n    return _regeneratorRuntime.async(function onSubmitHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            campaign = Campaign(props.address);\n            setLoading(true);\n            setErrMsg(\"\");\n            _context.prev = 4;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n          case 7:\n            accounts = _context.sent;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(campaign.methods.createRequest(description, web3.utils.toWei(value, \"ether\"), recipient).send({\n              from: accounts[0]\n            }));\n\n          case 10:\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](4);\n            setErrMsg(_context.t0.message);\n\n          case 15:\n            setLoading(false);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[4, 12]]);\n  };\n\n  return __jsx(Layout, null, __jsx(\"h3\", null, \"Create A Request\"), __jsx(Form, {\n    error: !!errMsg,\n    onSubmit: onSubmitHandler\n  }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Description\"), __jsx(Input, {\n    value: description,\n    onChange: function onChange(event) {\n      return setDescription(event.target.value);\n    }\n  })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Value in Ether\"), __jsx(Input, {\n    value: value,\n    onChange: function onChange(event) {\n      return setValue(event.target.value);\n    }\n  })), __jsx(Form.Field, null, __jsx(\"label\", null, \"recipient\"), __jsx(Input, {\n    value: recipient,\n    onChange: function onChange(event) {\n      return setRecipient(event.target.value);\n    }\n  })), __jsx(Message, {\n    error: true,\n    header: \"Oops!\",\n    content: errMsg\n  }), __jsx(Button, {\n    type: \"submit\",\n    primary: true\n  }, \"Create!\")));\n};\n\nRequestNew.getInitialProps = function _callee(props) {\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", {\n            address: props.query.address\n          });\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nexport default RequestNew;","map":{"version":3,"sources":["/home/beast/Desktop/myGithub/kickstarter-ethereum/pages/campaigns/requests/new.js"],"names":["React","useState","Campaign","web3","Layout","Form","Input","Button","Message","RequestNew","props","value","setValue","description","setDescription","recipient","setRecipient","errMsg","setErrMsg","loading","setLoading","onSubmitHandler","event","preventDefault","campaign","address","eth","getAccounts","accounts","methods","createRequest","utils","toWei","send","from","message","target","getInitialProps","query"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Campaign from \"../../../ethereum/campaign\";\nimport web3 from \"../../../ethereum/web3\";\nimport Layout from \"../../../components/Layout\";\nimport { Form, Input, Button, Message } from \"semantic-ui-react\";\n\nconst RequestNew = props => {\n  const [value, setValue] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [recipient, setRecipient] = useState(\"\");\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const onSubmitHandler = async event => {\n    event.preventDefault();\n    const campaign = Campaign(props.address);\n    setLoading(true);\n    setErrMsg(\"\");\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods\n        .createRequest(description, web3.utils.toWei(value, \"ether\"), recipient)\n        .send({ from: accounts[0] });\n      //   Router.pushRoute('/');\n    } catch (err) {\n      setErrMsg(err.message);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <Layout>\n      <h3>Create A Request</h3>\n      <Form error={!!errMsg} onSubmit={onSubmitHandler}>\n        <Form.Field>\n          <label>Description</label>\n          <Input\n            value={description}\n            onChange={event => setDescription(event.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Value in Ether</label>\n          <Input\n            value={value}\n            onChange={event => setValue(event.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>recipient</label>\n          <Input\n            value={recipient}\n            onChange={event => setRecipient(event.target.value)}\n          />\n        </Form.Field>\n        <Message error header=\"Oops!\" content={errMsg} />\n        <Button type=\"submit\" primary>\n          Create!\n        </Button>\n      </Form>\n    </Layout>\n  );\n};\n\nRequestNew.getInitialProps = async props => {\n  return { address: props.query.address };\n};\n\nexport default RequestNew;\n"]},"metadata":{},"sourceType":"module"}